#!/bin/sh
#
# Move (rename) a CVS repository file.
#
# File:		cvsmv
# Author:	Bob Walton <walton@acm.org>
# Date:		Sun Mar 29 07:28:26 EDT 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/03/29 15:30:24 $
#   $RCSfile: cvsmv,v $
#   $Revision: 1.6 $

# Redirect all error output to the standard output.
#
exec 2>&1

case "$1" in
-doc*)
    echo '
cvsmv file1 file2

    First commit (as per cvscom) file1 and then move
    (rename) it to file2.  Lastly make file2 user writ-
    able if file1 was writable before it was committed.

    More specifically, after file1 is committed then
    the CVS repository file1,v is moved (renamed) to the
    CVS repository file2,v.  After the move a cvs update
    is performed on both file1 and file2, which removes
    the local copy of file1 and makes a local copy of
    file2.  Lastly the local copy of file2 is made user
    writable if file1 was writable before it was commit-
    ted.

    For cvsmv the current directory need not be under
    CVS control and the two files may be in different
    CVS repositories as long as both are in the same
    account.'
    exit 1
    ;;
esac

dir1="`dirname "$1"`"
base1="`basename "$1"`"
dir2="`dirname "$2"`"
base2="`basename "$2"`"

if [ ! -f "$1" ]
then
    echo "ERROR $1 is NOT an ordinary file"
    exit 2
elif [ -e "$2" ]
then
    echo "ERROR $2 already exists"
    exit 2
elif [ ! -d "$dir1/CVS" ]
then
    echo "ERROR $dir1 is NOT under CVS control"
    exit 2
elif [ ! -d "$dir2/CVS" ]
then
    echo "ERROR $dir2 is NOT under CVS control"
    exit 2
fi

w=no
if [ -w "$1" ]
then
    w=yes
fi

echo "(cd $dir1; cvs commit -m update $base1)"
(cd "$dir1"; cvs commit -m update "$base1")

root1="`cat "$dir1/CVS/Root"`"
repository1="`cat "$dir1/CVS/Repository"`"
rdir1="$root1"
raccount1=
case "$root1" in
*:*)
    raccount1="`expr "$root1" : '\([^:]*\):' `"
    rdir1="`expr "$root1" : '[^:]*:\(.*\)$' `"
    ;;
esac
rdir1="$rdir1/$repository1"
case "$raccount1" in
""|*@*)
    ;;
*)
    echo "ERROR: bad $dir1/CVS/Root: $root1"
    exit 2
    ;;
esac
case "$rdir1" in
/*)
    ;;
*)
    echo "ERROR: bad $dir1/CVS/Root: $root1"
    exit 2
    ;;
esac

root2="`cat "$dir2/CVS/Root"`"
repository2="`cat "$dir2/CVS/Repository"`"
rdir2="$root2"
raccount2=
case "$root2" in
*:*)
    raccount2="`expr "$root2" : '\([^:]*\):' `"
    rdir2="`expr "$root2" : '[^:]*:\(.*\)$' `"
    ;;
esac
rdir2="$rdir2/$repository2"
case "$raccount2" in
""|*@*)
    ;;
*)
    echo "ERROR: bad $dir2/CVS/Root: $root2"
    exit 2
    ;;
esac
case "$rdir2" in
/*)
    ;;
*)
    echo "ERROR: bad $dir2/CVS/Root: $root2"
    exit 2
    ;;
esac

if [ "$raccount1" != "$raccount2" ]
then
    echo "ERROR: $dir1/CVS/Root account ($raccount1)" \
         "!= $dir2/CVS/Root account ($raccount2)"
    exit 2
fi


rfile1="$rdir1/$base1,v"
rfile2="$rdir2/$base2,v"
case "$raccount1" in
"")
    echo mv "$rfile1" "$rfile2"
    if ! mv "$rfile1" "$rfile2"
    then
    	echo "ERROR: move inside repository failed"
    	exit 2
    fi
    ;;
*)
    echo ssh "$raccount1" mv "$rfile1" "$rfile2"
    if ! ssh "$raccount1" mv "$rfile1" "$rfile2"
    then
    	echo "ERROR: move inside repository failed"
    	exit 2
    fi
    ;;
esac

echo "(cd $dir1; cvs update $base1)"
(cd "$dir1"; cvs update "$base1")
echo "(cd $dir2; cvs update $base2)"
(cd "$dir2"; cvs update "$base2")

if [ w = yes ]
then
    echo chmod u+w "$2"
    chmod u+w "$2"
fi
