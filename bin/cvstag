#!/bin/sh
#
# Tag all project files.
#
# File:		cvstag
# Author:	Bob Walton <walton@acm.org>
# Date:		Tue Mar 31 12:06:50 EDT 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/03/31 16:11:28 $
#   $RCSfile: cvstag,v $
#   $Revision: 1.5 $

# Redirect all error output to the standard output.
#
exec 2>&1

case "$1" in
-doc*)
    echo '
cvstag tag

    First commit (as per cvscom), then update (as per
    cvsup), then remove the tag from all files in the
    repository, and then tag all current project file
    revisions with the given tag.  The tag can be any
    symbol not beginning with a digit.

    Specifically, a tag on a file is an abbreviation for
    a particular revision of the file.  By tagging the
    current revisions of all files in a project, you
    tag a revision of the project as a whole.  This pro-
    ject revision can then be checked out with cvsout
    using the -rtag option, in order to recover the
    tagged revision of the project.

    The only way to manipulate (e.g. remove) a tag is
    to make a temporary local copy of the current direc-
    tory and its subdirectories that have the tagged
    revision of the files checked out, and manipulate
    (e.g. remove) the tag in that temporary local copy,
    and then delete the temporary local copy.  Otherwise
    Attic files are not properly considered.'

    exit 1
    ;;
esac

if [ $# -ne 1 ]
then
    echo "ERROR: too few or too many arguments"
    exit 2
elif [ ! -d ./CVS ]
then
    echo "ERROR: current directory is not under" \
         "CVS control"
    exit 2
fi

tag="$1"

case "$tag" in
[0-9]*)
    echo "ERROR: tag cannot begin with a digit: $tag"
    exit 2
    ;;
esac

if [ -d ../CVS ]
then
    echo "WARNING: You are in a subdirectory of" \
         "a directory under CVS control."
    echo "Maybe you are not in a project root" \
    	 "directory."
    echo -n "Do you want to continue (y or n)? "
    if ! read || [ "$REPLY" != y ]
    then
        exit 1
    fi
fi

echo cvs commit -m update
if ! cvs commit -m update
then
    echo "ERROR: commit failed"
    exit 2
fi

echo cvs update -d -P
if ! cvs update -d -P
then
    echo "ERROR: update failed"
    exit 2
fi

# The only way to manipulate tags on Attic files is
# to check them out.

root="`cat "CVS/Root"`"
repository="`cat "CVS/Repository"`"

case "$root" in
/?*|*?:/?*)	;;
*)	echo "ERROR: bad root format: $root"
	exit 2
	;;
esac
case "$repository" in
/*)	echo "ERROR: repository is absolute path" \
             "name: $repository"
	exit 2
	;;
esac

tmpdir=/tmp/cvstag-tmp-$$
trap "rm -rf $tmpdir" EXIT
rm -f $tmpdir
if [ -e $tmpdir ]
then
    echo "RANDOM ERROR: $tmpdir exists; try again"
    exit 2
fi
echo mkdir $tmpdir
mkdir $tmpdir

pwd="`pwd`"

echo cd $tmpdir
cd $tmpdir
echo cvs -d "$root" checkout "-r$tag" -P "$repository"
if cvs -d "$root" checkout "-r$tag" -P "$repository" \
   && [ -d "$repository" ]
then
    echo cd "$repository"
    cd "$repository"
    echo cvs tag -d "$tag"
    cvs tag -d "$tag"
fi

echo rm -rf $tmpdir
rm -rf $tmpdir

echo cd "$pwd"
cd "$pwd"

echo cvs tag "$1"
cvs tag "$1"
