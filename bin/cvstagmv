#!/bin/bash
#
# Move (rename) a tag from all project files.
#
# File:		cvstagmv
# Author:	Bob Walton <walton@acm.org>
# Date:		Sun Apr  5 09:02:54 EDT 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/04/05 13:40:27 $
#   $RCSfile: cvstagmv,v $
#   $Revision: 1.4 $

# Redirect all error output to the standard output.
#
exec 2>&1

case "$1" in
-doc*)
    echo '
cvstagmv oldtag newtag

    First commit (as per cvscom), then update (as per
    cvsup), then move (rename) the tag for all files in
    the repository.  See cvstag for more on tags.'

    exit 1
    ;;
esac

if [ $# -ne 2 ]
then
    echo "ERROR: too few or too many arguments"
    exit 2
elif [ ! -d ./CVS ]
then
    echo "ERROR: current directory is not under" \
         "CVS control"
    exit 2
fi

oldtag="$1"
newtag="$2"

case "$oldtag" in
[0-9]*)
    echo "ERROR: tag cannot begin with a digit: $oldtag"
    exit 2
    ;;
"")
    echo "ERROR: tag cannot be empty"
    exit 2
    ;;
esac

case "$newtag" in
[0-9]*)
    echo "ERROR: tag cannot begin with a digit: $newtag"
    exit 2
    ;;
"")
    echo "ERROR: tag cannot be empty"
    exit 2
    ;;
esac

if [ "$oldtag" = "$newtag" ]
then
    echo "ERROR: new tag equals old tag"
    exit 2
fi

if [ -d ../CVS ]
then
    echo "WARNING: You are in a subdirectory of" \
         "a directory under CVS control."
    echo "Maybe you are not in a project root" \
    	 "directory."
    echo -n "Do you want to continue (y or n)? "
    if ! read || [ "$REPLY" != y ]
    then
        exit 1
    fi
fi

echo cvs commit -m update
if ! cvs commit -m update
then
    echo "ERROR: commit failed"
    exit 2
fi

echo cvs update -d -P
if ! cvs update -d -P
then
    echo "ERROR: update failed"
    exit 2
fi

# The only way to manipulate tags on Attic files is
# to check them out.

root="`cat "CVS/Root"`"
repository="`cat "CVS/Repository"`"

case "$root" in
/?*|*?:/?*)	;;
*)	echo "ERROR: bad root format: $root"
	exit 2
	;;
esac
case "$repository" in
/*)	echo "ERROR: repository is absolute path" \
             "name: $repository"
	exit 2
	;;
esac

tmpdir=/tmp/cvstag-tmp-$$
echo "# Moving to $tmpdir temporarily to manipulate" \
     "tags"
trap "rm -rf $tmpdir" EXIT
rm -f $tmpdir
if [ -e $tmpdir ]
then
    echo "RANDOM ERROR: $tmpdir exists; try again"
    exit 2
fi
echo mkdir $tmpdir
mkdir $tmpdir

pwd=`pwd`

echo cd $tmpdir
if ! cd $tmpdir
then
    echo "ERROR: cd $tmpdir failed"
fi

echo "# Checkout with $newtag tag to remove it"
echo "# This will fail if tag was not previously used"
echo cvs -d "$root" checkout "-r$newtag" -P \
	 "$repository"
if cvs -d "$root" checkout "-r$newtag" -P \
       "$repository" && [ -d "$repository" ]
then
    echo "# Removing previous $newtag tag"
    echo cd "$repository"
    cd "$repository"

    echo cvs tag -d "$newtag"
    cvs tag -d "$newtag"

    echo cd $tmpdir
    cd $tmpdir

    echo rm -rf $tmpdir/$repository
    rm -rf $tmpdir/$repository
else
    echo "# Checkout failed to produce $repository"
fi

echo "# Checkout with $oldtag tag to move it"
echo "# This will fail if tag was not previously used"
echo cvs -d "$root" checkout "-r$oldtag" -P \
         "$repository"
if cvs -d "$root" checkout "-r$oldtag" -P \
        "$repository" && [ -d "$repository" ]
then
    echo cd "$repository"
    cd "$repository"

    echo "# Adding $newtag tag"
    echo cvs tag "$newtag"
    cvs tag "$newtag"

    echo "# Removing $oldtag tag"
    echo cvs tag -d "$oldtag"
    cvs tag -d "$oldtag"
else
    echo "# Checkout failed to produce $repository"
fi

echo "# Returning to original current directory"
echo cd "$pwd"
cd "$pwd"

echo rm -rf $tmpdir
rm -rf $tmpdir

exit 0
