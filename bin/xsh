#! /bin/bash
#
# Start a new X terminal running the shell.
#
# File:		xsh
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Sat Mar 12 03:37:27 EST 2016
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.

FSIZE=20
ZOOM=1.0
XTERM=no

tmpfile=/tmp/xsh$$-tmp
trap "rm -f $tmpfile*" EXIT

case "$1" in
   -doc*)
   	echo '
xsh [ZOOM]
xsh -xterm [FSIZE]"

Opens a new X-window running the shell, using gnome-
terminal if that exists and the -xterm option is NOT
given; else using xterm.

If gnome-terminal is used the default profile is used
and its normal font size (and with it terminal window
size) is multiplied by ZOOM, which defaults to 1.0.
You may change the font size after the terminal window
is created by typing control + to increase and control
- to decrease.  From such a terminal window you may
open another terminal window by typing control N or
another tab of the current window by typing control T,
and you may switch from one tab to another by typing
control page-up and control page-down.

If xterm is used, the normal font size is changed to
FSIZE (default 20).

In either case you may change the window size by
dragging the edges.' | less -F
	exit 0
	;;

   -XSH-SHELL)
        echo ''
        echo 'NOTE: 'You may need or want to change \
	     the font by selecting
	echo '      'Edit - Profile Preferences, \
	     checking Custom font, and picking
        echo '      'a font that looks good \(some \
	     fonts overlap themselves\).
        echo ''
	exec bash
	;;

esac

if test "$1" = "-xterm"; then XTERM=yes; shift; fi

if which gnome-terminal >/dev/null 2>&1 \
   && test $XTERM = "no"
then
    if test "$1" != ""; then ZOOM="$1"; fi
    NO_AT_BRIDGE=1 gnome-terminal --zoom=$ZOOM \
        --command="$0 -XSH-SHELL"
else
    if [[ "$1" != "" ]]
    then
        FSIZE="$1"
        if [[ ! ( "$FSIZE" =~ ^[0-9]+$ ) ]]
	then
	    echo "Bad font size $FSIZE"
	    exit 2
	fi
    fi

    declare -a fonts
    xlsfonts >$tmpfile \
        -fn "*-r-normal--0-*-m-*-iso8859-1"
    c=0
    exec 3<"$tmpfile"
    while read -r <&3
    do
        fonts[$c]="$REPLY"
	let ++c
    done
    exec 3<&-

    if (( c == 0 ))
    then
        FONT=fixed
	FSIZE=small
    else
	echo "Point size will be $FSIZE"
	echo "Choose your font (bold may be better):"
	i=0
	while (( i < c ))
	do
	    echo "$i: ${fonts[$i]}"
	    let ++i
	done
	let --c
	while read -r
	do
	    if [[ "$REPLY" =~ ^[0-9]+$ ]]
	    then
		if (( $REPLY <= $c ))
		then
		    break
		fi
	    fi
	    echo "Try again (0-$c)"
	done
	[[    "${fonts[$REPLY]}" \
	   =~ ^(.*-r-normal--)0(-.*$) ]]
	FONT="${BASH_REMATCH[1]}${FSIZE}"
	FONT="${FONT}${BASH_REMATCH[2]}"
    fi

    echo "Font will be $FONT"
    echo "Point size will be $FSIZE"
    echo 'Launching xterm (will take some seconds)'
    xterm  -g 80x35 -fn "$FONT" -bg white \
	   -rightbar -sb -ls &
fi

exit 0
