#!/bin/sh
#
# Expunge files from a CVS repository.
#
# File:		cvsexpunge
# Author:	Bob Walton <walton@acm.org>
# Date:		Mon Mar 30 08:19:18 EDT 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/03/30 12:25:13 $
#   $RCSfile: cvsexpunge,v $
#   $Revision: 1.4 $

# Redirect all error output to the standard output.
#
exec 2>&1

f=no
case "$1" in
-doc*)
    echo '
cvsexpunge [-f] file ...

    Expunge files from both the local directories and
    the repository.  Once expunged, these files CANNOT
    be recovered, and tagged revisions of the files are
    permanently lost.  A local copy of a file must exist
    in order to expunge the file from the repository.

    More specifically, each file is removed both from
    the repository, including any Attic directories, and
    from the local directory, and then `cvsup file'"'"'
    is executed to remove local CVS records of the file.

    Without the -f option, the user is asked to approve
    each file expungement.

    Cvsexpunge does not require that the current direc-
    tory be under CVS control or that given files be in
    the same repository.  Directories cannot be expung-
    ed by cvsexpunge.'

    exit 1
    ;;
-f)
    f=yes
    shift
    ;;
esac

for file in "$@"
do
    dir="`dirname "$file"`"
    base="`basename "$file"`"
    if [ ! -f "$file" ]
    then
	echo "ERROR $file is NOT an ordinary file;" \
	     "skipping"
	continue
    elif [ ! -d "$dir/CVS" ]
    then
	echo "ERROR $dir is NOT a CVS controlled" \
	     "directory; skipping"
	continue
    elif ! (cd "$dir"; \
            cvs log "$base" >/dev/null 2>/dev/null)
    then
	echo "ERROR: $file is not in repository;" \
	     "skipping"
	continue
    fi

    root="`cat "$dir/CVS/Root"`"
    repository="`cat "$dir/CVS/Repository"`"
    rdir="$root"
    raccount=
    case "$root" in
    *:*)
	raccount="`expr "$root" : '\([^:]*\):' `"
	rdir="`expr "$root" : '[^:]*:\(.*\)$' `"
	;;
    esac
    rdir="$rdir/$repository"
    case "$raccount" in
    ""|*@*)
	;;
    *)
	echo "ERROR: bad $dir/CVS/Root: $root"
	exit 2
	;;
    esac
    case "$rdir" in
    /*)
	;;
    *)
	echo "ERROR: bad $dir/CVS/Root: $root"
	exit 2
	;;
    esac

    if [ $f = no ]
    then
    	echo -n "remove $file (y or n)? "
	if ! read || [ "$REPLY" != y ]
	then
	    continue
	fi
    fi

    case "$raccount" in
    "")
	if [ -f "$rdir/$base,v" ]
	then
	    echo rm -f "$rdir/$base,v"
	    rm -f "$rdir/$base,v"
	    echo rm -f "$file"
	    rm -f "$file"
	    echo "(cd $dir; cvs update $base)"
	    (cd "$dir"; cvs update "$base")
	elif [ -f "$rdir/Attic/$base,v" ]
	then
	    ## in the Attic
	    echo rm -f "$rdir/Attic/$base,v"
	    rm -f "$rdir/Attic/$base,v"
	    echo rm -f "$file"
	    rm -f "$file"
	    echo "(cd $dir; cvs update $base)"
	    (cd "$dir"; cvs update "$base")
	else
	    ## Added but not committed.
	    echo "(cd $dir; cvs remove -f $base)"
	    (cd $dir; cvs remove -f $base)
	fi
	;;
    *)
	if ssh "$raccount" test -f "$rdir/$base,v"
	then
	    echo ssh "$raccount" rm -f "$rdir/$base,v"
	    ssh "$raccount" rm -f "$rdir/$base,v"
	    echo rm -f "$file"
	    rm -f "$file"
	    echo "(cd $dir; cvs update $base)"
	    (cd "$dir"; cvs update "$base")
	elif ssh "$raccount" test -f \
	         "$rdir/Attic/$base,v"
	then
	    ## in the Attic
	    echo ssh "$raccount" \
	         rm -f "$rdir/Attic/$base,v"
	    ssh "$raccount" rm -f "$rdir/Attic/$base,v"
	    echo rm -f "$file"
	    rm -f "$file"
	    echo "(cd $dir; cvs update $base)"
	    (cd "$dir"; cvs update "$base")
	else
	    ## Added but not committed
	    echo "(cd $dir; cvs remove -f $base)"
	    (cd $dir; cvs remove -f $base)
	fi
	;;
    esac

done
