#!/bin/sh
#
# Create new project directory.
#
# File:		cvsout
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Tue Mar 24 08:38:10 EDT 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/03/25 07:30:52 $
#   $RCSfile: cvsout,v $
#   $Revision: 1.4 $

# Redirect all error output to the standard output.
#
exec 2>&1

n=no
e=no
case "$1" in

-doc*)

    echo '
cvsout [-n|-e|-ne|-en] repository directory

    Checkout a directory from a repository.

    The repository argument is of the form

    	AAA@HHH:DDD

    where AAA is an account name, HHH is the name of the
    host on which the account resides, and DDD is the
    ABSOLUTE pathname of the root directory holding the
    repository within the account AAA@HHH.
    
    Then `directory'"'"' is both the name of the subdir-
    ctory of DDD being checked out, relative to DDD, and
    ALSO the name of the local checked out copy direc-
    tory, relative to the current directory.  AFTER
    checkout you can rename the local checked out copy
    directory if you like.

    If DDD is in the current account, `AAA@HHH:'"'"'
    should be omitted.

    All the contents of a directory being checked out
    will be checked out, recursively.

    Normally `directory'"'"' must exist in the reposi-
    tory but must NOT exist locally, and it will be
    checked out, thus creating it locally.

    If the -e option is given, the directory must pre-
    exist locally, but it also must NOT contain any
    contents with the same names as contents being
    checked out.

    If the -n option is given the directory must not
    exist in the repository, and will be created there.
    In this case the repository directory will be empty
    and have no contents to check out.

    The -ne or -en options combine the action of -e and
    -n and can be used to make an existing directory
    into a repository directory.  The contents of the
    existing directory are NOT entered into the
    repository: use cvsadd to do this.

    This command should NOT be used if the directory is
    or will be a previously checked out directory or
    inside a previously checked out directory.  In
    that case use cvsdir instead.'

    exit 1
    ;;
-n)
    shift
    n=yes
    ;;
-e)
    shift
    e=yes
    ;;
-ne|-en)
    shift
    n=yes
    e=yes
    ;;
esac

if [ $# -ne 2 ]
then
    echo "ERROR: too few or too many arguments"
    exit 2
fi

repository="$1"
directory="$2"

case "$repository" in
*:*)
    remote=yes
    account="`expr "$repository" : '\([^:]*\):'`"
    root="`expr "$repository" : '[^:]*:\(.*\)$'`"
    case "$account" in
    *?@?*)	aok=yes;;
    *)	echo "ERROR: bad account format: $account"
        exit 2;;
    esac
    case "$root" in
    /?*)	aok=yes;;
    *)	echo "ERROR: non-absolute root directory" \
             "name: $root"
        exit 2;;
    esac
    ;;
/?*)
    remote=no
    ;;
*)
    echo "ERROR: bad repository format: $repository"
    exit 2
    ;;
esac

if [ $e = no -a -e "$directory" ]
then
    echo "ERROR: local directory exists but no -e" \
         "option given: $directory"
    exit 2
elif [ $e = yes -a ! -d "$directory" ]
then
    echo "ERROR: local directory does not exist" \
         "but -e option given: $directory"
    exit 2
fi

if [ $n = yes ]
then
    if [ $remote = no ]
    then
    	echo mkdir "repository/$directory"
    	if ! mkdir "repository/$directory"
	then
	    echo "ERROR $repository/$directory" \
	         "already exists"
	    exit 2
	fi
    else
    	echo ssh "$account" mkdir "$root/$directory"
    	if ! ssh "$account" mkdir "$root/$directory"
	then
	    echo "ERROR $repository:$directory" \
	         "already exists"
	    exit 2
	fi
    fi
fi

cvs -d "$repository" checkout "$directory"
