#!/bin/sh
#
# Create new project directory.
#
# File:		cvsout
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Tue Mar 31 06:33:35 EDT 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/03/31 11:02:03 $
#   $RCSfile: cvsout,v $
#   $Revision: 1.8 $

# Redirect all error output to the standard output.
#
exec 2>&1

n=no
e=no
r=
case "$1" in

-doc*)

    echo '
cvsout [-n|-e|-ne|-en|-rT] [-E] repository directory

    Checkout a project directory from a repository, in
    the case that the local copy of this directory
    will NOT itself be inside a local directory that
    has been checked out.

    The repository argument is of the form

    	AAA@HHH:DDD

    where AAA is an account name, HHH is the name of the
    host on which the account resides, and DDD is the
    ABSOLUTE pathname of the root directory holding the
    repository within the account AAA@HHH.

    If DDD is in the current account, `AAA@HHH:'"'"'
    should be omitted.
    
    Then `directory'"'"' is both the name of the subdir-
    ctory of DDD being checked out, relative to DDD, and
    ALSO the name of the local checked out copy direc-
    tory, relative to the current directory.  AFTER
    checkout you can rename the local checked out copy
    directory if you like with mv(1).

    All the contents of a directory being checked out
    will be checked out, recursively.

    The -rT option, if given, checks out the project
    version that has tag T (see cvstag).  If this is
    done, the checked out files should NOT be modified
    and then checked back in (i.e., cvscom should NOT
    be used on them).

    Normally `directory'"'"' must exist in the reposi-
    tory but must NOT exist locally, and it will be
    checked out, thus creating it locally.

    If the -e option is given, the directory must pre-
    exist locally, but it also must NOT contain any
    contents with the same names as contents being
    checked out.  The pre-existing contents of the
    existing directory are NOT entered into the reposi-
    tory: use cvsadd to do this.

    If the -n option is given the directory must not
    exist in the repository, and will be created there.
    In this case the repository directory will be empty
    and have no contents to check out.

    The -ne or -en options combine the action of -e and
    -n and can be used to make an existing directory
    into a repository directory.

    This command may not be used if the directory is
    within a directory under CVS control.  To add a new
    subdirectory of such a directory to the repository
    use mkdir and cvsadd instead; to check out a subdi-
    rectory of such a directory if the subdirectory is
    already in the repository, use cvsup.

    Normally project subdirectories that are empty (or
    that have only Attic files; see cvsrm) are not
    checked out.  The -E option causes such empty dir-
    ectories to be checked out.'

    exit 1
    ;;
-n)
    shift
    n=yes
    ;;
-e)
    shift
    e=yes
    ;;
-ne|-en)
    shift
    n=yes
    e=yes
    ;;
-r*)
    r="$1"
    shift
esac

P=-P
case "$1" in
-E)	P=
	shift
	;;
esac

if [ $# -ne 2 ]
then
    echo "ERROR: too few or too many arguments"
    exit 2
fi

repository="$1"
directory="$2"

case "$repository" in
*:*)
    remote=yes
    account="`expr "$repository" : '\([^:]*\):'`"
    root="`expr "$repository" : '[^:]*:\(.*\)$'`"
    case "$account" in
    *?@?*)	aok=yes;;
    *)	echo "ERROR: bad account format: $account"
        exit 2;;
    esac
    case "$root" in
    /?*)	aok=yes;;
    *)	echo "ERROR: non-absolute root directory:" \
             "$root"
        exit 2;;
    esac
    ;;
/?*)
    remote=no
    ;;
*)
    echo "ERROR: non-absolute root directory:" \
         "$repository"
    exit 2
    ;;
esac

if [ $e = no -a -e "$directory" ]
then
    echo "ERROR: local directory exists but no -e" \
         "option given: $directory"
    exit 2
elif [ $e = yes -a ! -d "$directory" ]
then
    echo "ERROR: local directory does not exist" \
         "but -e option given: $directory"
    exit 2
elif [ -d "`dirname "$directory"`/CVS" ]
then
    echo "ERROR: $directory is inside a local" \
         "directory that is under CVS control"
    if [ $n = yes ]
    then
	echo "       maybe you should use mkdir and" \
	     "then cvsadd instead"
    else
	echo "       maybe you should use cvsup instead"
    fi
    exit 2
fi

if [ $n = yes ]
then
    if [ $remote = no ]
    then
    	echo mkdir "$repository/$directory"
    	if ! mkdir "$repository/$directory"
	then
	    echo "ERROR during mkdir"
	    exit 2
	fi
    else
    	echo ssh "$account" mkdir "$root/$directory"
    	if ! ssh "$account" mkdir "$root/$directory"
	then
	    echo "ERROR during mkdir"
	    exit 2
	fi
    fi
fi

echo cvs -d "$repository" checkout $r "$directory"
cvs -d "$repository" checkout $r "$directory"
echo "(cd $directory; cvs update $P)"
(cd "$directory"; cvs update $P)
